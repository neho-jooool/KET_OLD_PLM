package e3ps.test;

public class Solution3 {

    static int total_Len;
    static int targetNum;
    static int count;

    public static void main(String[] args) {

	int[] numbers = { 1, 1, 1, 1, 1 };
	int target = 3;

	Solution3 aa = new Solution3();

	int b = aa.solution(numbers, target);
	System.out.println("result = " + b);

    }

    public int solution(int[] numbers, int target) {
	total_Len = numbers.length;

	targetNum = target;
	count = 0;

	DFS(0, 0, numbers);
	int answer = count;
	System.out.println(answer);
	return answer;
    }

    public static void DFS(int flag, int sum, int[] compNum) {
	if (flag == total_Len) {
	    if (targetNum == sum) {// 합계가 3이 되면 카운트를 증가한다
		count++;
		return;
	    } else {
		return;
	    }
	}
	int tmpNum = compNum[flag];
	System.out.println(" tmpNum === " + tmpNum + " 의 원소 : " + compNum[flag] + " 지금 sum = " + sum + " 던져줄 sum " + (sum + tmpNum));

	DFS(flag + 1, sum + tmpNum, compNum); // 재귀
	DFS(flag + 1, sum - tmpNum, compNum); // 재귀
    }

}
