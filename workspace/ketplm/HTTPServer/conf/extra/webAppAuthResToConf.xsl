<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
<xsl:output method="text" indent="no"/>

<!-- This stylesheet produces an Apache configuration file to specify
     authentication for each of the resources listed in the source XML file. -->

<!-- Input parameters -->
<xsl:param name="appName" select="'Windchill'"/>
<xsl:param name="disableAuthentication"/>
<xsl:param name="protocolAuthOnly"/>
<xsl:param name="authRealm" select="'Windchill'"/>
<xsl:param name="authProviderFile"/>
<xsl:param name="authResFile"/>

<!-- Single, global template -->
<xsl:template match="/">
<xsl:text># Web App Authenticated Resources
# DO NOT EDIT THIS FILE. IT IS AUTO-GENERATED AND WILL BE OVERWRITTEN.
# In order to use the 'require ldap-attribute' directive, set AuthAuthoritative OFF

</xsl:text>

<!-- Collect resource info -->
<xsl:variable name="resources" select='document($authResFile)/resources'/>

<xsl:choose>

<!-- If authentication is disabled, output a comment stating this -->
<xsl:when test='$disableAuthentication="true"'>
<xsl:text># Default authentication disabled
</xsl:text>
</xsl:when>

<!-- Otherwise output authentication configuration -->
<xsl:otherwise>

<!-- Collect the auth providers -->
<xsl:variable name="authProviders" select='document($authProviderFile)/providers/*'/>
<xsl:variable name="authProviderNames">
  <xsl:for-each select='$authProviders/name'>
    <xsl:sort/>
    <xsl:value-of select='.'/>
    <xsl:text> </xsl:text>
  </xsl:for-each>
</xsl:variable>

<!-- Output the provider info -->
<xsl:if test='$authProviders'>
<xsl:text># Authentication providers
</xsl:text>
<xsl:for-each select='$authProviders'>
<xsl:sort select='name'/>
<xsl:variable name="baseProvider">
  <xsl:choose>
    <xsl:when test="not( empty(./ldapUrl) )">ldap</xsl:when>
    <xsl:otherwise>file</xsl:otherwise>
  </xsl:choose>
</xsl:variable>
<xsl:if test="not(./name='')">
&lt;AuthnProviderAlias <xsl:value-of select='$baseProvider'/><xsl:text> </xsl:text><xsl:value-of select='./name'/><xsl:text>&gt;</xsl:text>
  <xsl:if test="not( empty(./ldapUrl) )">
  AuthLDAPURL "<xsl:value-of select='./ldapUrl'/>"</xsl:if>
  <xsl:if test="not( empty(./bindDn) )">
  AuthLDAPBindDN "<xsl:value-of select='./bindDn'/>"</xsl:if>
  <xsl:if test="not( empty(./bindPwd) )">
  AuthLDAPBindPassword "<xsl:value-of select='./bindPwd'/>"</xsl:if>
  <xsl:if test="not( empty(./pwdFile) )">
  AuthUserFile "<xsl:value-of select='./pwdFile'/>"</xsl:if>
&lt;/AuthnProviderAlias&gt;
</xsl:if>
</xsl:for-each>
</xsl:if>

<!-- Output authenticated resource info -->
<xsl:variable name="authenticatedResources" select='$resources/resource[(not($protocolAuthOnly="true") and not(@type="anonymous")) or
                                                                        (($protocolAuthOnly="true") and @type="protocolAuth")]'/>
<xsl:if test='$authenticatedResources'>
<xsl:text>
# Authenticated resources
</xsl:text>
<xsl:for-each select='$authenticatedResources'>
<xsl:sort/>
<xsl:variable name="resource" select='.'/>
&lt;LocationMatch ^/+<xsl:value-of select='$appName'/>/+<xsl:value-of select="replace($resource,'/','/+')"/>(;.*)?&gt;
  AuthzLDAPAuthoritative off
  AuthName "<xsl:value-of select='$authRealm'/>"
  AuthType Basic
  AuthBasicProvider <xsl:value-of select='$authProviderNames'/>
  require valid-user
  AuthCookieName AuthCookie
  AuthCookieOverride Off
  AuthCookieBase64 On
&lt;/LocationMatch&gt;
</xsl:for-each>
</xsl:if>

</xsl:otherwise>
</xsl:choose>

<!-- Output anonymous resource info -->
<xsl:variable name="anonymousResources" select='$resources/resource[@type="anonymous"]'/>
<xsl:if test='$anonymousResources'>
<xsl:text>
# Anonymous resources
</xsl:text>
<xsl:for-each select='$anonymousResources'>
<xsl:sort/>
<xsl:variable name="resource" select='.'/>
&lt;LocationMatch ^/+<xsl:value-of select='$appName'/>/+<xsl:value-of select="replace($resource,'/','/+')"/>(;.*)?&gt;
  Satisfy Any
  Allow from all
&lt;/LocationMatch&gt;
</xsl:for-each>
</xsl:if>

</xsl:template>

</xsl:stylesheet>
